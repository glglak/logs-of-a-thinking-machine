---
import Datetime from "./Datetime.astro";
import { getPath } from "@/utils/getPath";
import type { CollectionEntry } from "astro:content";

export interface Props extends CollectionEntry<"blog"> {
  variant?: "h2" | "h3";
}

const { variant = "h2", data, id, filePath } = Astro.props;

const { title, pubDatetime, modDatetime, description, heroImage, timezone } = data;

// Simple slugify function inline
function slugify(str: string): string {
  return str
    .toLowerCase()
    .replace(/[^a-z0-9 -]/g, '')
    .replace(/\s+/g, '-')
    .replace(/-+/g, '-')
    .trim();
}

const headerProps = {
  style: { viewTransitionName: slugify(title) },
  className: "text-lg font-semibold text-gray-900 dark:text-white decoration-dashed hover:text-blue-600 dark:hover:text-blue-400 transition-colors duration-200"
};

const href = getPath(id, filePath);
---

<li class="group bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 shadow-sm hover:shadow-md hover:border-blue-200 dark:hover:border-blue-700 transition-all duration-200 overflow-hidden">
  <a href={href} class="block">
    <!-- Hero Image -->
    {heroImage && (
      <div class="aspect-video w-full overflow-hidden">
        <img 
          src={heroImage} 
          alt={title}
          class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
          loading="lazy"
        />
      </div>
    )}
    
    <!-- Content -->
    <div class="p-6">
      <!-- Header -->
      {variant === "h2" ? (
        <h2 {...headerProps}>{title}</h2>
      ) : (
        <h3 {...headerProps}>{title}</h3>
      )}
      
      <!-- Date and Reading Time -->
      <div class="flex items-center space-x-4 mt-2 mb-3">
        <Datetime 
          pubDatetime={pubDatetime} 
          modDatetime={modDatetime}
          timezone={timezone}
          class="text-sm text-gray-500 dark:text-gray-400"
        />
        <span class="text-gray-300 dark:text-gray-600">â€¢</span>
        <span class="text-sm text-gray-500 dark:text-gray-400">
          {Math.ceil((description?.length || 100) / 200)} min read
        </span>
      </div>
      
      <!-- Description -->
      <p class="text-gray-600 dark:text-gray-300 leading-relaxed line-clamp-2">
        {description}
      </p>
      
      <!-- Read More -->
      <div class="mt-4">
        <span class="inline-flex items-center text-blue-600 dark:text-blue-400 font-medium text-sm group-hover:text-blue-700 dark:group-hover:text-blue-300 transition-colors duration-200">
          Read more
          <svg class="w-4 h-4 ml-1 group-hover:translate-x-1 transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
          </svg>
        </span>
      </div>
    </div>
  </a>
</li>
