---
import { SITE } from "@/config";

type SocialLink = {
  href?: string;
  label?: string;
  icon?: any; // optional Astro/JSX component
};

// Normalize & filter links so href is always a non-empty string
const rawLinks: SocialLink[] = (SITE as any)?.socials ?? [];
const links = rawLinks
  .filter((l) => l && typeof l.href === "string")
  .map((l) => ({ ...l, href: (l.href as string).trim() }))
  .filter((l) => l.href.length > 0);

function isExternal(href: string) {
  return /^(https?:)?\/\//i.test(href); // https:// or //cdnâ€¦
}
---

{links.length > 0 && (
  <ul class="flex flex-wrap gap-3">
    {links.map((l) => (
      <li>
        <a
          href={l.href}
          target={isExternal(l.href) ? "_blank" : undefined}
          rel={isExternal(l.href) ? "noopener noreferrer" : undefined}
          class="inline-flex items-center gap-2 rounded-md px-3 py-2 text-sm text-gray-700 hover:text-blue-600 dark:text-gray-300 dark:hover:text-blue-400"
        >
          {l.icon ? <l.icon /> : null}
          <span>{l.label ?? l.href}</span>
        </a>
      </li>
    ))}
  </ul>
)}
