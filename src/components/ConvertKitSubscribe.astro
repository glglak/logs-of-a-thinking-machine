---
// ConvertKit Subscribe Component
// You'll need to replace 'YOUR_FORM_ID' with your actual ConvertKit form ID
// Get this from: https://app.convertkit.com/forms
---

<div class="bg-gray-50 dark:bg-gray-900 rounded-lg p-6 border border-gray-200 dark:border-gray-700">
  <h3 class="text-lg font-semibold mb-4 text-gray-900 dark:text-white">Stay Updated</h3>
  <p class="text-gray-600 dark:text-gray-300 text-sm mb-4">
    Get notified when new posts are published.
  </p>
  
  <!-- ConvertKit Form -->
  <form 
    action="https://app.kit.com/forms/8635379/subscriptions" 
    method="post" 
    class="seva-form formkit-form space-y-3"
    data-sv-form="8635379"
    data-uid="6d7f5c26b3"
    data-format="inline"
    data-version="5"
  >
    <input 
      type="email" 
      name="email_address" 
      placeholder="Enter your email"
      required
      class="w-full px-4 py-2 rounded-lg border border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent"
    />
    <button 
      type="submit" 
      class="w-full bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-lg transition-colors duration-200 shadow-sm"
    >
      Subscribe
    </button>
  </form>
  
  <!-- Success/Error Messages -->
  <div id="subscribe-message" class="mt-3 text-sm hidden"></div>
</div>

<!-- ConvertKit Script -->
<script src="https://f.convertkit.com/ckjs/ck.5.js"></script>

<script>
  // Handle form submission
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.querySelector('form[data-sv-form="8635379"]') as HTMLFormElement;
    const messageDiv = document.getElementById('subscribe-message');
    
    if (form && messageDiv) {
      form.addEventListener('submit', function(e) {
        e.preventDefault();
        
        const formData = new FormData(form);
        const email = formData.get('email_address') as string;
        
        // Basic validation - just check if email exists and has @ symbol
        if (!email || !email.includes('@')) {
          showMessage('Please enter a valid email address.', 'error');
          return;
        }
        
        // Show loading state
        const submitBtn = form.querySelector('button[type="submit"]') as HTMLButtonElement;
        if (submitBtn) {
          const originalText = submitBtn.textContent || '';
          submitBtn.textContent = 'Subscribing...';
          submitBtn.disabled = true;
          
          // Submit to ConvertKit
          fetch(form.action, {
            method: 'POST',
            body: formData,
            headers: {
              'Accept': 'application/json'
            }
          })
          .then(response => response.json())
          .then(data => {
            if (data.status === 'success') {
              showMessage('Thanks for subscribing! Check your email to confirm.', 'success');
              form.reset();
            } else {
              showMessage('Something went wrong. Please try again.', 'error');
            }
          })
          .catch(error => {
            console.error('Error:', error);
            showMessage('Something went wrong. Please try again.', 'error');
          })
          .finally(() => {
            submitBtn.textContent = originalText;
            submitBtn.disabled = false;
          });
        }
      });
    }
    
    function showMessage(text: string, type: 'success' | 'error') {
      if (messageDiv) {
        messageDiv.textContent = text;
        messageDiv.className = `mt-3 text-sm ${type === 'success' ? 'text-green-600 dark:text-green-400' : 'text-red-600 dark:text-red-400'}`;
        messageDiv.classList.remove('hidden');
        
        // Hide message after 5 seconds
        setTimeout(() => {
          messageDiv.classList.add('hidden');
        }, 5000);
      }
    }
  });
</script>
